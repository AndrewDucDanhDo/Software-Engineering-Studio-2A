{
	"swagger": "2.0",
	"info": {
		"title": "Quantum solver API",
		"version": "v1"
	},
	"paths": {
		"/circuit/solve": {
			"post": {
				"summary": "Solve a quantum circuit",
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "gates",
						"in": "body",
						"description": "Gates in the circuit",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							},
							"example": ["gate1", "gate2", "gate3"]
						}
					},
					{
						"name": "circuit",
						"in": "body",
						"description": "A json representation of the quantum circuit",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"type": {
										"type": "string"
									},
									"time": {
										"type": "integer"
									},
									"targets": {
										"type": "array",
										"items": {
											"type": "integer"
										}
									},
									"controls": {
										"type": "array",
										"items": {
											"type": "string"
										}
									}
								}
							},
							"example": [
								{
									"type": "x",
									"time": 3,
									"targets": [0],
									"controls": []
								}
							]
						}
					},
					{
						"name": "qubits",
						"in": "body",
						"description": "Number of qubits in the circuit",
						"required": true,
						"schema": {
							"type": "integer",
							"example": 1
						}
					},
					{
						"name": "input",
						"in": "body",
						"description": "The binary state of each qubit input",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "integer"
							},
							"example": [1, 0, 1]
						}
					},
					{
						"name": "version",
						"in": "body",
						"description": "Version of the circuit schema",
						"required": true,
						"schema": {
							"type": "integer",
							"example": 1
						}
					}
				],
				"responses": {
					"200": {
						"description": "Result was successfully computed and returned.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"results": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"value": {
														"type": "string"
													},
													"impossible": {
														"type": "boolean"
													},
													"amplitude": {
														"type": "string"
													},
													"state": {
														"type": "string"
													}
												}
											}
										}
									}
								}
							}
						},
						"examples": {
							"application/json": {
								"results": [
									{
										"value": "0.0000%",
										"impossible": true,
										"amplitude": "0.00000000+0.00000000i",
										"state": "00"
									},
									{
										"value": "0.0000%",
										"impossible": true,
										"amplitude": "0.00000000+0.00000000i",
										"state": "01"
									},
									{
										"value": "0.0000%",
										"impossible": true,
										"amplitude": "0.00000000+0.00000000i",
										"state": "10"
									},
									{
										"value": "100.0000%",
										"impossible": false,
										"amplitude": "1.00000000+0.00000000i",
										"state": "11"
									}
								]
							}
						}
					},
					"500": {
						"description": "Unknown server side error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"results": {
											"type": "object",
											"properties": {
												"msg": {
													"type": "string"
												},
												"error": {
													"type": "string"
												}
											}
										}
									}
								}
							}
						},
						"examples": {
							"application/json": {
								"msg": "An unknown error occurred while trying to solve the circuit.",
								"error": "RangeError: Invalid array length"
							}
						}
					}
				}
			}
		}
	},
	"consumes": ["application/json"]
}
