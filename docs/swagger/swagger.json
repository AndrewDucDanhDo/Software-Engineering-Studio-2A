{
	"swagger": "2.0",
	"info": {
		"title": "Quantum solver API",
		"version": "v1"
	},
	"paths": {
		"/circuit/solve": {
			"post": {
				"summary": "Solve a quantum circuit",
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "gates",
						"in": "body",
						"description": "Gates in the circuit",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							},
							"example": ["gate1", "gate2", "gate3"]
						}
					},
					{
						"name": "circuit",
						"in": "body",
						"description": "A json representation of the quantum circuit",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"type": {
										"type": "string"
									},
									"time": {
										"type": "integer"
									},
									"targets": {
										"type": "array",
										"items": {
											"type": "integer"
										}
									},
									"controls": {
										"type": "array",
										"items": {
											"type": "string"
										}
									}
								}
							},
							"example": [
								{
									"type": "x",
									"time": 3,
									"targets": [0],
									"controls": []
								}
							]
						}
					},
					{
						"name": "qubits",
						"in": "body",
						"description": "Number of qubits in the circuit",
						"required": true,
						"schema": {
							"type": "integer",
							"example": 1
						}
					},
					{
						"name": "input",
						"in": "body",
						"description": "The binary state of each qubit input",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "integer"
							},
							"example": [1, 0, 1]
						}
					},
					{
						"name": "version",
						"in": "body",
						"description": "Version of the circuit schema",
						"required": true,
						"schema": {
							"type": "integer",
							"example": 1
						}
					}
				],
				"responses": {
					"200": {
						"description": "Result was successfully computed and returned.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"results": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"value": {
														"type": "string"
													},
													"impossible": {
														"type": "boolean"
													},
													"amplitude": {
														"type": "string"
													},
													"state": {
														"type": "string"
													}
												}
											}
										}
									}
								}
							}
						},
						"examples": {
							"application/json": {
								"results": [
									{
										"value": "0.0000%",
										"impossible": true,
										"amplitude": "0.00000000+0.00000000i",
										"state": "00"
									},
									{
										"value": "0.0000%",
										"impossible": true,
										"amplitude": "0.00000000+0.00000000i",
										"state": "01"
									},
									{
										"value": "0.0000%",
										"impossible": true,
										"amplitude": "0.00000000+0.00000000i",
										"state": "10"
									},
									{
										"value": "100.0000%",
										"impossible": false,
										"amplitude": "1.00000000+0.00000000i",
										"state": "11"
									}
								]
							}
						}
					},
					"500": {
						"description": "Unknown server side error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"msg": {
											"type": "string"
										},
										"error": {
											"type": "string"
										}
									}
								}
							}
						},
						"examples": {
							"application/json": {
								"msg": "An unknown error occurred while trying to solve the circuit.",
								"error": "RangeError: Invalid array length"
							}
						}
					}
				}
			}
		},
		"/user/create": {
			"post": {
				"summary": "Create a new user in the quantum solver application.",
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "email",
						"in": "body",
						"required": true,
						"description": "The email address of the new user",
						"schema": {
							"type": "string",
							"example": "john.smith@exmaple.com"
						}
					},
					{
						"name": "password",
						"in": "body",
						"required": true,
						"description": "Password of the new user, Must be at least 6 digits.",
						"schema": {
							"type": "string",
							"example": "password1234"
						}
					},
					{
						"name": "firstName",
						"in": "body",
						"required": true,
						"description": "First name of new user",
						"schema": {
							"type": "string",
							"example": "John"
						}
					},
					{
						"name": "lastName",
						"in": "body",
						"required": true,
						"description": "Last name of new user",
						"schema": {
							"type": "string",
							"example": "Smith"
						}
					}
				],
				"responses": {
					"200": {
						"description": "User created successfully",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"uid": {
											"type": "string"
										},
										"email": {
											"type": "string"
										},
										"emailVerified": {
											"type": "boolean"
										},
										"displayName": {
											"type": "string"
										},
										"disabled": {
											"type": "boolean"
										},
										"metadata": {
											"type": "object",
											"properties": {
												"lastSignInTime": {
													"type": "string"
												},
												"creationTime": {
													"type": "string"
												}
											}
										},
										"tokensValidAfterTime": {
											"type": "string"
										},
										"providerData": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"uid": {
														"type": "string"
													},
													"displayName": {
														"type": "string"
													},
													"email": {
														"type": "string"
													},
													"providerId": {
														"type": "string"
													}
												}
											}
										}
									}
								}
							}
						},
						"examples": {
							"application/json": {
								"uid": "NrkgUXXPrWUkeNvxXXhL7bRjXXl2",
								"email": "john.smith@exmaple.com",
								"emailVerified": false,
								"displayName": "John Smith",
								"disabled": false,
								"metadata": {
									"lastSignInTime": null,
									"creationTime": "Sat, 11 Apr 2020 10:57:33 GMT"
								},
								"tokensValidAfterTime": "Sat, 11 Apr 2020 10:57:33 GMT",
								"providerData": [
									{
										"uid": "john.smith@exmaple.com",
										"displayName": "John Smith",
										"email": "john.smith@exmaple.com",
										"providerId": "password1234"
									}
								]
							}
						}
					},
					"400": {
						"description": "User email already registered.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"properties": {
											"code": {
												"type": "string"
											},
											"msg": {
												"type": "string"
											}
										}
									}
								}
							}
						},
						"examples": {
							"application/json": {
								"code": "auth/email-already-exists",
								"msg": "The email address provided has currently got an account associated with it"
							}
						}
					},
					"500": {
						"description": "User email already registered.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"properties": {
											"code": {
												"type": "string"
											},
											"msg": {
												"type": "string"
											},
											"error": {
												"type": "string"
											}
										}
									}
								}
							}
						},
						"examples": {
							"application/json": {
								"code": "unknown",
								"msg": "An unknown error occurred while trying to create a new user.",
								"error": "Error: The password must be a string with at least 6 characters."
							}
						}
					}
				}
			}
		}
	},
	"consumes": ["application/json"]
}
